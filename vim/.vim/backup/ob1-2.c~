#include "header.h"

//char tegn[] = {' ', ':', '@', '\n'};
//char bit[] = {'00', '01', '10', '11'};

//char tegn[] = {" ", ":", "@", "\n"};
//char bit[] = {"00", "01", "10", "11"};

int print_fi(char* fi){
    FILE* in_f = fopen(fi, "r");
    int c;
    if(in_f);
    while((c = getc(in_f)) != EOF){
        printf("%c", c);
    }
    fclose(in_f);
    return 0;
}

int encode(char* inf, char* outf){

    FILE* in_f = fopen(inf, "r");
    FILE* out_f = fopen(outf, "w");
    char c;
    char char_beholder[4];
    int counter = 0;
    int i = 0;
    int k = 0;
    unsigned char b;
    if(in_f && out_f){
        while((c = fgetc(in_f)) != EOF){
            if(i == 4){
                b = 0;
                i = 0;
                k = 0;
                counter = 7;
                for (k=0;k<4;k++){
                    char c = char_beholder[k];
                    if (c == ' '){
                        b += 0 << counter | 0 << (counter-1);
                    } 
                    else if (c == ':'){
                        b += 0 << counter | 1 << (counter-1);
                    }
                    else if (c == '\n'){
                        b += 1 << counter | 1 << (counter-1);
                    }
                    else if (c == '@'){
                        b += 1 << counter | 0 << (counter-1);
                    }else{
                        printf("ERROR this is some invalid chars in you file");
                    }
                    counter=counter-2;
                }
                printf("%d", b);
                fputc(b, out_f);

            }
            char_beholder[i] = c;
            i++;
        }
    }

    fclose(in_f);
    fclose(out_f);
    return 0;
}

// TODO
int decode(char* inf){

    FILE* in_f = fopen(inf, "r");
    int d;
    int i=0;
    int k=0;
    char char_beholder[4];

    if(in_f){
        while((d = fgetc(in_f)) != EOF){
            unsigned char c = d;
            int counter = 7;
            for (k=0; k<4;k++){
                int b = c &(1<<counter|1<<(counter-1));

                if(b == 0){
                    printf("%c", ' ');
                }
                else if (b == 64 || b == 16 || b == 4 || b == 1){
                    printf("%c",':');
                }
                else if(b == 192 || b == 48 || b ==12 || b == 3){
                    printf("%c",'\n');
                }
                else if(b == 128 || b == 32 || b == 8 || b == 2){
                    printf("%c",'@');
                }else{
                    printf("ERROR");
                }

                counter=counter-2;

                if (counter > 7){
                    counter = 0;
                }
                //printf("counter = %d",counter);

            }
        }
    }
    fclose(in_f);

    return 0;
}



int main(int argc, char* argv[]){


    if(strcmp(argv[1], "p") == 0){
        if(argc != 3){
            printf("error, needs 2 args to work: \n"
                    "command, inputfile \n");
        } else{
            print_fi(argv[2]);
        }
    } else if(strcmp(argv[1], "e") == 0) {
        if (argc != 4){
            printf("error needs 3 args to work:\n"
                    "command, inputfile, outputfile\n");
        } else{
            encode(argv[2], argv[3]);
        }
    } else if(strcmp(argv[1], "d") == 0){
        if(argc != 3){
            printf("error, needs 2 args to work: \n"
                    "command, inputfile \n");
        } else{
            decode(argv[2]);
        }
    }else{
        printf("error wrong command");
    }
    return 0;
}
